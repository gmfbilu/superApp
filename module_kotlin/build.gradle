if (isModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

Properties properties = new Properties()
properties.load(project.rootProject.file("gradle.properties").newDataInputStream())
String versionNameP = properties.getProperty("versionName")
int versionCodeP = Integer.parseInt(properties.getProperty("versionCode"))

android {
    resourcePrefix "module_kotlin_"
    compileSdkVersion compileSdk as int
    defaultConfig {
        minSdkVersion minSdk as int
        targetSdkVersion targetSdk as int
        versionCode versionCodeP
        versionName versionNameP
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':lib_base')
    testImplementation "junit:junit:${junit_lib_version}"
    androidTestImplementation "com.android.support.test:runner:${test_runner_lib_version}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${test_espresso_lib_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    annotationProcessor "com.alibaba:arouter-compiler:${arouter_compiler_version}"
}
